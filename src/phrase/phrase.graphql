type Query {
  getPhrases(getPhrasesInput: GetPhrasesInput): [Phrase]
  getPhrase(id: ID!): Phrase
}

type Mutation {
  createPhrase(createPhraseInput: CreatePhraseInput): Phrase
}

type Subscription {
  phraseCreated: Phrase
}

type Phrase {
  id: Int!
  phraseId: String!
  tags: [String]!
}

input CreatePhraseInput {
  projectId: Int!
  phraseId: String!
  tags: [String]
}

input GetPhrasesInput {
  skip: Int!
  take: Int!
  orderBy: PhraseOrderBy!
  orderDirection: CommonOrderDirection!
}

enum PhraseOrderBy {
  phraseId
  id
}
